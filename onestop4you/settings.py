"""
Django settings for onestop4you project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'v^!wti2k8#qp0os0_y@6w)kw51c_pokj042_9@+&3rtfvivx%g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # use {% load humanize %} and intcomma in html make 32000 to 32,000,
    # like <td>$ {{ celebrity.worth | intcomma }}</td>
    'mainstore',
    'myprofile',
    'cart',
    'bootstrap3',
    'order',
    'payment',
    'paypal.standard.ipn',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'onestop4you.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'onestop4you.wsgi.application'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
PAYPAL_RECEIVER_EMAIL = 'youremail-facilitator@hotmail.com'
PAYPAL_TEST = True

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
#         },
#         'simple': {
#             'format': '%(levelname)s %(message)s'
#         },
#     },
#     # 'filters': {
#     #     'special': {
#     #         '()': 'project.logging.SpecialFilter',
#     #         'foo': 'bar',
#     #     },
#     #     'require_debug_true': {
#     #         '()': 'django.utils.log.RequireDebugTrue',
#     #     },
#     # },
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             # 'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'verbose'
#         },
#         # 'file': {
#         #     'level': 'DEBUG',
#         #     'class': 'logging.FileHandler',
#         #     'filename': 'mylog_test.log',
#         #     'formatter': 'verbose'
#         # },
#
#         # 'mail_admins': {
#         #     'level': 'ERROR',
#         #     'class': 'django.utils.log.AdminEmailHandler',
#         #     'filters': ['special']
#         # }
#     },
#     'loggers': {
#         # 'django': {
#         #     'handlers': ['console'],  # console or file
#         #     'propagate': True,
#         #     'level': 'DEBUG',
#         # },
#         # 'django.request': {
#         #     'handlers': ['console'],
#         #     'level': 'DEBUG',
#         #     'propagate': False,
#         # },
#         # For performance reasons, SQL logging is only enabled when settings.DEBUG is set to True
#         # ref. https://docs.djangoproject.com/en/1.11/topics/logging/#django-db-backends
#         'django.db.backends': {
#             'handlers': ['console'],
#             'propagate': False,
#             'level': 'DEBUG',
#         },
#
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# or use staticfiles
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/staticfiles/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'staticfiles/')
CART_SESSION_ID = 'cart'
LOGIN_REDIRECT_URL = '/mainstore'
LOGIN_URL = '/login'
